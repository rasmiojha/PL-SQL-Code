--Loan Application Submission--------
--Loan Approval/Rejection----------
--Interest Calculation---------
--Repayment Schedule Generation-----------
--Handling Overdue Payments-------------
--https://github.com/Arpit-Sagar/DBMS-Banking-Database-Project

CREATE TABLE LOAN_APPLICATION
(
	APPLICATION_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	APPLICANT_ID NUMBER NOT NULL,
	LOAN_AMOUNT NUMBER NOT NULL,
	LOAN_TYPE VARCHAR2 NOT NULL,
	CREDIT_SCORE NUMBER NOT NULL,
	STATUS VARCHAR2 DEFAULT PENDING ,
	APPLICATION_DATE DATE DEFAULT SYSDATE,
	CONSTRAINT CHECK_LOAN_AMOUNT CHECK (LOAN_AMOUNT > 10000),
	CONSTRAINT CHECK_STATUS CHECK (STATUS IN ('PENDING','APPROVED','REJECTED'))
);
	
CREATE TABLE APPLICANT
(
	APPLICANT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	FIRST_NAME VARCHAR2(20),
	MIDDLE_NAME VARCHAR2(20),
	LAST_NAME VARCHAR2(20),
	ADDRESS VARCHAR2(100),
	E_MAIL VARCHAR2(30),
	MOB_NO NUMBER ,
	CREDIT_SCORE NUMBER,
	ADHAR_CARD_NUMBER NUMBER,
	PAN_CARD_NUMBER NUMBER,
	INCOME NUMBER,
	DOB DATE,
	CONSTARINT CHECK_CREDITSCORE CHECK CREDIT_SCORE IN BETWEEN 300 AND 850
);
	
----------------- creating procedure to insert loan application details into loan table without doing any checks ------------------------

CREATE OR REPLACE SUBMIT_LOAN_APPLICATION
(
	P_APPLICANT_ID IN NUMBER,
	P_LOAN_AMOUNT IN NUMBER,
	P_LOAN_TYPE IN VARCHAR,
	P_CREDIT_SCORE IN NUMBER,
	P_APPLICATION_DATE IN DATE ,
	P_STATUS OUT VARCHAR2
)IS 

BEGIN 
	INSERT INTO LOAN_APPLICATION(APPLICANT_NAME,ADHAR_NUMBER,PANCARD_NUMBER,LOAN_AMOUNT,LOAN_TYPE,CREDIT_SCORE,STATUS,APPLICATION_DATE)
	VALUES(P_APPLICANT_NAME,P_ADHAR_NUMBER,P_PANCARD_NUMBER,P_LOAN_AMOUNT,P_LOAN_TYPE,P_CREDIT_SCORE,P_APPLICATION_DATE);
	
	COMMIT;
	
	P_STATUS := 'LOAN APPLICATION SUBMITTED SUCESSFULLY';
	
EXCEPTION 
	WHEN OTHERS THEN 
		ROLLBACK;
		P_STATUS = 'ERROR:'||SQLERRM;
END SUBMIT_LOAN_APPLICATION;
/

-------------------creating a procedure to insert loan data with checking existing loan application,credit score , income --------------------------

CREATE OR REPLACE PROCEDURE SUBMIT_LOAN_APPLICATION
(
	P_APPLICANT_ID IN NUMBER,
	P_LOAN_AMOUNT IN NUMBER,
	P_LOAN_TYPE IN VARCHAR2,
	P_CREDIT_SCORE IN NUMBER,
	P_APPLICATION_DATE IN DATE,
	P_STATUS OUT VARCHAR
)IS 

	CURSOR EXISTING_LOAN_APP IS 
	SELECT COUNT(*) AS APPLICATION_COUNT
	FROM LOAN_APPLICATION
	WHERE LOAN_APPLICAT_ID=P_LOAN_APPLICANT_ID
	AND LOAN_TYPE = P_LOAN_TYPE
	AND STATUS='PENDING';
	
	V_APPLICATION_COUNT := NUMBER;
	V_CREDIT SCORE APPLICAT.CREDIT_SCORE%TYPE;
	V_INCOME APPLICAANT.INCOME%TYPE;
	
BEGIN
	IF P_LOAN_AMOUNT <10000 AND P_LOAN_AMOUNT > 1000000 THEN
		P_STATUS:= 'ERROR : LOAN AMOUNT MUST BE WITHIN 10000 TO 1000000';
		RETURN;
	END IF;
	
	IF P_APPLICATION_DATE >SYSDATE THEN
		P_STATUS:='FUTURE DATE IS NOT ALLOWED IN ';
		RETURN;
	END IF ;
	
	
	SELECT CREDIT_SCORE,INCOME
	INTO V_CREDIT_SCORE ,V_INCOME
	FROM APPLICANT 
	WHERE APPLICANT_ID = P_APPLICANT_ID;
	
	IF V_CREDIT_SCORE < 500 THEN 
		P_STATUS:= 'CREDIT SCORE IS TOO LOW TO SUBMIT LOAN APPLICATION';
		RETURN;
	END IF;
	
	IF V_INCOME < (LOAN_AMOUNT/10) THEN 
		P_STATUS:='INCOME IS VERY LOW FOR A LOAN ';
		RETURN;
	END IF;
	OPEN EXISTING_LOAN_APP ;
	FETCH EXISTING_LOAN_APP INTO V_APPLICATION_COUNT;
	CLOSE EXISTING_LOAN_APP;
	
	IF V_APPLICATION_COUNT =! 0 THEN 
		P_STATUS:= 'APPLICATION IS PENDING FOR APPROVAL';
	ELSE 
		INSERT INTO LOAN_APPLICATION(APPLICANT_NAME,ADHAR_NUMBER,PANCARD_NUMBER,LOAN_AMOUNT,LOAN_TYPE,CREDIT_SCORE,STATUS,APPLICATION_DATE)
		VALUES(P_APPLICANT_NAME,P_ADHAR_NUMBER,P_PANCARD_NUMBER,P_LOAN_AMOUNT,P_LOAN_TYPE,P_CREDIT_SCORE,P_APPLICATION_DATE);
		COMMIT;
	
		P_STATUS:= 'APPLICATION IS SUBMITED SUCESSFULLY';
		RETURN;
	END IF;
	
EXCEPTION
	WHEN OTHERS THEN 
		ROLLBACK;
		P_STATUS:='ERROR:||SQLERRM';
END SUBMIT_LOAN_APPLICATION;
/

-----------------------procedure to PROCESS a loan application --------------------------

CREATE OR REPLACE PROCEDURE PROCESS_LOAN_APPLICATION
(
	P_APPLICANT_ID IN NUMBER,
	P_STATUS OUT VARCHAR
)IS
	CURSOR APPROVE_LOAN IS
	SELECT COUNT(*) APPROVED_COUNT
	FROM LOAN_APPLICATION 
	WHERE APPLICANT_ID = P_APPLICANT_ID
	AND STATUS = 'APPROVED';
	
	CURSOR REJECT_LOAN IS 
	SELECT COUNT(*) REJECT_COUNT
	FROM LOAN_APPLICATION 
	WHERE APPLICANT_ID =P_APPLICANT_ID
	AND STATUS ='REJECTED';
	
	CURSOR PENDING_LOAN IS 
	SELECT COUNT(*) PENDING_COUNT
	FROM LOAN_APPLICATION 
	WHERE APPLICANT_ID =P_APPLICANT_ID
	AND STATUS='PENDING';
	
	V_APPLICANT_ID APPLICANTS.APPLICANT_ID%TYPE;
	V_INCOME APPLICANTS.INCOME%TYPE;
	V_CREDIT_SCORE APPLICANTS.CREDIT_SCORE%TYPE;
	V_INCOME APPLICANTS.INCOME%TYPE;
	V_APPROVE_COUNT NUMBER;
	V_REJECT_COUNT NUMBER;
	V_PENDING_COUNT NUMBER;
	
BEGIN
	SELECT APPLICANT_ID , LOAN_AMOUNT
	INTO V_APPLICANT_ID,V_LOAN_AMOUNT
	FROM LOAN_APPLICATION 
	WHERE APPLICANT_ID=P_APPLICANT_ID
	FOR UPDATE;

	OPEN APPROVE_LOAN;
	FETCH APPROVE_LOAN INTO V_APPROVE_COUNT;
	CLOSE APPROVE_LOAN;
	
	OPEN REJECT_LOAN;
	FETCH REJECT_LOAN INTO V_REJECT_COUNT;
	CLOSE REJECT_LOAN;
	
	OPEN PENDING_LOAN;
	FETCH PENDING_LOAN INTO V_PENDING_COUNT;
	CLOSE PENDING_LOAN;
	
	
	IF V_REJECT_COUNT >1 THEN 
		P_STATUS = '';
		RETURN;
	ELSIF V_PENDING_COUNT >1 THEN 
		P_STATUS='';
		RETURN;
	ELSIF V_APPROVE_COUNT >1 THEN 
		P_STATUS = '';
		RETURN;
	END IF;
	
	SELECT CREDIT_SCORE ,INCOME 
	INTO V_CREDIT_SCORE ,V_INCOME
	FROM APPLICANTS 
	WHERE APPLICANT_ID =P_APPLICANT_ID;
	
	IF THE V_CREDIT_SCORE >=600 AND INCOME >= (P_LOAN_AMOUNT/10) THEN 
		UPDATE LOAN_APPLICATE SET STATUS = 'APPROVED'
		WHERE APPLICANT_ID =P_APPLICANT_ID;
		p_status := 'Loan Application Approved';
	ELSE 
		UPDATE LOAN_APPLICATION SET STATUS ='REJECTED'
		WHERE APPLICANT_ID =P_APPLICANT_ID;
		p_status := 'Loan Application Rejected';
	END IF;
	COMMIT;
	
	P_STATUS:='Loan Application is processed sucessfully';
EXCEPTION 
	WHEN NO DATA FOUND THEN 
		P_STATUS:='APPLICATION ID IS NOT FOUND';
		RETURN;
	WHEN OTEHRS THEN
		ROLLBACK;
		P_STATUS := 'ERROR:||SQLERRM';
END PROCESS_LOAN_APPLICATION;
/