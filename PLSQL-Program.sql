--PROCEDURE TO CALCULATE SIMPLE INTEREST USING CURSOR --
CREATE OR REPLACE PROCEDURE PR_CALCULATE_SI
IS 
CURSOR SI_CURSOR IS 
SELECT LOAN_ACC_NO,PRINCEPAL,RATE,TIME FROM LOANS;

V_LOAN_ACC_NO LOAN.LOAN_ACC_NO%TYPE;
V_PRINCEPAL LOAN.PRINCEPAL%TYPE;
V_RATE LOAN.RATE%TYPE;
V_TIME LOAN.TIME%TYPE;
V_INTEREST LOAN.INTEREST%TYPE;

BEGIN 

	OPEN SI_CURSOR;
	FETCH SI_CURSOR INTO V_LOAN_ACC_NO,V_PRINCEPAL,V_RATE,V_TIME;
	EXIT WHEN SI_CORSIR%NOT_FOUND;
		
		LOOP 
			
			IF V_LOAN_ACC_NO IS NOT NULL, V_PRINCEPAL IS NOT NULL, V_RATE IN NOT NULL , V_TIME IS NOT NULL THEN 
			
				IF V_PRINCEPAL >0,V_RATE >0,V_TIME>0 THEN 
					
					V_INTEREST := (V_PRINCEPAL*V_RATE,V_TIME)/100;
					
				ELSE 
				V_INTEREST := 0;
				
				END IF ;
				
				UPDATE LOAN SET INTEREST = V_INTEREST WHERE LOAN_ACC_NO = V_LOAN_ACC_NO ;
				DBMS_OUTPUT.PUT_LINE('LOAN ACCOUNT NUMBER IS :'||V_LOAN_ACC_NO);
				DBMS_OUTPUT.PUT_LINE ('PRICEPLA AMMOUNT IS :'||V_PRINCEPAL);
				DBMS_OUTPUT.PUT_LINE('RATE OF INTEREST:'||V_RATE);
				DBMS_OUTPUT.PUT_LINE('TIME PERIOD IS:'||V_TIME);
				DBMS_OUTPUT.PUT_LINE('CALCULATED INTEREST IS :'||NVL(V_INTEREST , 'NULL'));
				DBMS_OUTPUT.PUT_LINE('----------------------------------------------------');
			ELSE 
				UPDATE LOAN SET INTEREST = 0 WHERE LOAN_ACC_NO = V_LOAN_ACC_NO;
			END IF ;
		END LOOP;
	CLOSE SI_CURSOR;
	
EXCEPTION 

	WHEN NO_DATA_FOUND 
		THEN DBMS_OUTPUT.PUT_LINE('V_LOAN_ACC_NO' || 'THIS LOAN ACCOUNT NUMBER IS NOT FOUND ');
	WHEN TOO_MANY_ROWS 
		THEN DBMS_OUTPUT.PUT_LINE ('V_LOAN_ACC_NO'||'MULTIPLE ACCOUNT NUMBER FOUND FOR THIS ID');
	WHEN OTHERS  
		THEN DBMS_OUTPUT.PUT_LINE ('AN UNEXPECTED ERROR OCCURED '|| SQLERRM);
		
END;

/

CREATE TABE LOAN 
(
	LOAN_ACCOUNT_NO NUMBER PRIMARY KEY,
	PRINCEPAL NUMBER,
	RATE NUMBER,
	TIME NUMBER,
	INTEREST NUMBER 
);


-------CALCULATE COMPOUND INTEREST OF A LOAN -------------

CREATE OR REPLACE PROCEDURE PR_CALCULATE_CI IS 

CURSOR CI_CURSOR IS 
SELECT LOAN_ACC_NO,PRINCEPAL,RATE ,TIME FROM LOAN;

V_LN_ACC_NO LOAN.LOAN_ACC_NO%TYPE;
V_PRINCEPAL LOAN.PRINCEPAL%TYPE;
V_RATE LOAN.RATE%TYPE;
V_TIME LAON.TIME%TYPE;
V_TIMES_COMPUNDED LOAN.TIMES_COMPUNDED%TYPE;
V_AMOUNT LOAN.AMOUNT%TYPE;

BEGIN

	OPEN CI_CURSOR;
		LOOP
			FETCH CI_CURSOR INTO V_LN_ACC_NO,V_PRINCEPAL,V_RATE,V_TIME,V_TIMES_COMPOUNDED;
			EXIT WHEN CI_CURSOR%NOTFOUND ;
				IF V_PRINCEPAL IS NOT NULL , V_RATE IS NOT NULL,V_TIME IS NOT NULL ,V_TIMES COMPOUNDED IS NOT NULL THEN 
					
					IF V_PRINCEPAL >0 , V_RATE >0,V_TIME>0,V_TIMES_COMPOUNDED >0 THEN 
					
						V_AMOUNT := V_PRINCEPAL * POWER((1+V_RATE/V_TIMES_COMPOUNDED),(V_TIMES_COMPOUNDED*V_TIME));
					ELSE
						V_AMOUNT := 0;
					END IF;
				ELSE 
					V_AMOUNT:=0;
				END IF;
				
			UPDATE LOAN SET AMOUNT = V_AMOUNT WHERE LOAN_ACC_NO=V_LN_AC_NO;
			DBMS_OUTPUT.PUT_LINE ('THE LOAN ACCOUNT NUMBER IS '||V_LN_AC_NO);
			DBMS_OUTPUT.PUT_LINE('THE PRINCEPAL AMOUNT IS '||V_PRINCEPAL );
			DBMS_OUTPUT.PUT_LINE('THE RATE IS '||V_RATE);
			DBMS_OUTPUT.PUT_LINE('THE TIME IS '||V_TIME);
			DBMS_OUTPUT.PUT_LINE('THE TIMES COMPOUNDED IS '||V_TIMES_COMPOUNDED );
			DBMS_OUTPUT.PUT_LINE('THE COMPOUND INTEREST AMOUNT IS '||V_AMOUNT);
			DBMS_OUTPUT.PUT_LINE('-------------------------------------------');
			EXCEPTION
				WHEN OTHER THEN 
					DBMS_OUTPUT.PUT_LINE('CAN NOT PROCESS THE LOAN ACCOUNT NUMBER '||V_LN_ACC_NO||:||SQLERRM);
			END;
		END LOOP;
	CLOSE CI_CURSOR;
	
	EXCEPTION
		WHEN OTHER THEN 
			DBMS_OUTPUT.PUT_LINE('AN UNEXPECTED ERROR OCCURED '||SQLERRM);
END;
/
	
			



	
	



































CREATE OR REPLACE PROCEDURE CALCULATE_SI (PRINCEPLE NUMBER,RATE NUMBER,TIME NUMBER)
IS 
CURSOR LOAN_CURSOR IS 
SELECT PRINCEPAL,RATE,TIME
FROM LOANS;

V_PRINCEPAL LOAN.PRINCEPAL%TYPE;
V_RATE LOAN.RATE%TYPE;
V_TIME LOAN.TIME%TYPE;
V_INTEREST LOAN.INTEREST%TYPE;

BEGIN
	OPEN CURSOR LOAN_CURSOR;
	LOOP
		FETCH CURSOR LOAN_CURSOR INTO V_PRINCEPAL,V_RATE,V_TIME;
		EXIT WHEN LOAN_CURSOR%NOT_FOUND ;
	
		V_INTEREST = (V_PRINCEPAL*V_RATE*V_TIME)/100;
	
		UPDATE LOAN SET INTEREST = V_INTEREST WHERE CURRENT OF LOAN_CURSOR ;
	
	END LOOP;

	CLOSE LOAN_CURSOR;

END;
/
	
